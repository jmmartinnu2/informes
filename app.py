import streamlit as st
import json
import matplotlib.pyplot as plt
from mplsoccer import Pitch

# Configurar la p√°gina para ocupar todo el ancho
st.set_page_config(page_title="Informe de Jugadores", layout="wide")

# Cargar el JSON desde el fichero en la ra√≠z del proyecto
try:
    with open("informe_jugadores.json", "r", encoding="utf-8") as file:
        data = json.load(file)
        if "informe_jugadores" not in data or not data["informe_jugadores"]:
            st.error("‚ö†Ô∏è No se encontraron jugadores en el JSON.")
            st.stop()
except Exception as e:
    st.error(f"‚ö†Ô∏è Error al cargar el JSON: {e}")
    st.stop()

# Extraer nombres de los jugadores para el sidebar
jugadores = [jugador["nombre"] for jugador in data["informe_jugadores"]]

# Sidebar para seleccionar el jugador
st.sidebar.title("üéØ Selecciona un Jugador")
jugador_seleccionado = st.sidebar.selectbox("Elige un jugador:", jugadores)

# Buscar los datos del jugador seleccionado
jugador = next(j for j in data["informe_jugadores"] if j["nombre"] == jugador_seleccionado)

# Obtener posici√≥n en el campo
pos_x, pos_y = jugador["posicion_campo"]["x"], jugador["posicion_campo"]["y"]

# Crear pesta√±as (Tabs) para mostrar informaci√≥n
tab1, tab2 = st.tabs(["üìä Informe", "üé• Videos"])

# üìä TAB 1: Informe del Jugador + Posici√≥n en el Campo
with tab1:
    st.title(f"üìä Informe de {jugador['nombre']}")
    st.subheader(f"{jugador['equipo']} - {jugador['categoria']}")
    st.markdown(f"‚≠ê **Valoraci√≥n:** {jugador['valoracion']} / 5")

    # Crear columnas: info a la izquierda, campo a la derecha
    col1, col2 = st.columns([2, 1])

    with col1:
        # Mostrar informaci√≥n del partido
        st.markdown(f"### üèÜ Partido contra {jugador['partido']['rival']}")
        resultado = jugador["partido"]["resultado"]
        resultado_texto = " - ".join([f"{k.replace('_', ' ')} {v}" for k, v in resultado.items()])
        st.markdown(f"**Resultado:** {resultado_texto}")

        # Mostrar el informe completo
        st.markdown("### üìå An√°lisis del Desempe√±o")
        st.markdown(f"üìù **Comentario:** {jugador['informe']['comentario']}")

        with st.expander("üéØ Actuaci√≥n en el Partido"):
            actuacion = jugador["informe"]["actuacion"]
            st.markdown(f"- **Sistema de Juego:** {actuacion['sistema_juego']}")
            st.markdown(f"- **Rol:** {actuacion['rol']}")
            st.markdown(f"- **Desempe√±o:** {actuacion['desempeno']}")
            st.markdown(f"- **Participaci√≥n:** {actuacion['participacion']}")
            st.markdown(f"- **Liderazgo:** {actuacion['liderazgo']}")

        with st.expander("üéØ Posicionamiento T√°ctico"):
            tactico = jugador["informe"]["posicionamiento_tactico"]
            st.markdown(f"- **Formaci√≥n:** {tactico['formacion']}")
            st.markdown(f"- **Rol:** {tactico['rol']}")

        with st.expander("üéØ Aspectos T√©cnicos"):
            tecnica = jugador["informe"]["aspectos_tecnicos"]
            st.markdown(f"- **Manejo de bal√≥n:** {tecnica['manejo_balon']}")
            st.markdown(f"- **Puntos a mejorar:** {tecnica['puntos_mejorar']}")

        with st.expander("üéØ Duelos y Recuperaci√≥n"):
            duelos = jugador["informe"]["duelo_recuperacion"]
            st.markdown(f"- **Intervenci√≥n y cortes:** {duelos['intervencion_cortes']}")
            st.markdown(f"- **Observaci√≥n:** {duelos['observacion']}")

        with st.expander("üéØ Desempe√±o F√≠sico"):
            fisico = jugador["informe"]["desempeno_fisico"]
            st.markdown(f"- **Resistencia:** {fisico['resistencia']}")
            st.markdown(f"- **Velocidad:** {fisico['velocidad']}")

        with st.expander("üéØ Orden T√°ctico"):  
            if "orden_tactico" in jugador["informe"]:
                tactico = jugador["informe"]["orden_tactico"]
                st.markdown(f"- **T√°ctico:** {tactico['tactico']}")
                st.markdown(f"- **Concentraci√≥n:** {tactico['concentracion']}")
            else:
                st.markdown("‚ö†Ô∏è No hay informaci√≥n sobre el orden t√°ctico.")

    # üìå Columna derecha: Posici√≥n en el Campo
    with col2:
        st.markdown("### ‚öΩ Posici√≥n en el Campo")
        fig, ax = plt.subplots(figsize=(8, 7))
        pitch = Pitch(pitch_type='statsbomb', pitch_color='grass', line_color='white')
        pitch.draw(ax=ax)

        # A√±adir la posici√≥n del jugador en el campo
        ax.scatter(pos_x, pos_y, color="black", s=600, label=jugador["nombre"])
        ax.text(pos_x, pos_y + 3, jugador["nombre"], fontsize=12, ha="center", color="white")

        # Mostrar el gr√°fico en Streamlit
        st.pyplot(fig)


# üé• TAB 2: Secci√≥n de Videos
with tab2:
    st.title("üé• Videos del Jugador")

    # Verificar si hay videos y si es una lista
    if "video" in jugador and isinstance(jugador["video"], list):
        for video_url in jugador["video"]:
            st.video(video_url)  # Mostrar cada video individualmente
    else:
        st.write("üé¨ No hay videos disponibles para este jugador.")


